#!/bin/bash
# prpcUtils sh












# shellcheck saource=posixUtils.sh
. "$(dirname "$0)/../posixUtils.sh"

CURRENT_SCRIPT=$(dirname "$0")

usage() {
    echo "prpcServiceUtils.sh export| expose| hotfix| import |getStatus |rollback| manageRestorepoints |updateAccessGroup| updateDASS | help [options...]"
    echo ""
    echo "options:"
    echo " ---connProp                  FilePath to connection.properties to operate on multiple instances."
    echo " ---propFile                  Location of of prpcServiceUtils.properties file.Default to ./prpcServiceUtils.properties."
    echo " ---propSize                  Thread Pool size"
    echo " ---requestTimeOut            Request Timeout"
    echo " ---jobIdFile                 Path to the JobIds file generated by EXPORT/IMPORT/EXPORT/HOTFIX operation"
    echo " ---operationName             Operation Name to be queried for getStatus.import,export,expose and rollback are the valid operations names"
    echo " ---artifactDir               Specify the directory where all the service response artifact like attachments, services operations logs are stored."
    echo " ---processFailStrategy       Specify the failure strategy to use in case of multiple instances."
    echo "                              FAILS_PROCESS-ON_SINGLE_SYSTEM_FAILURE (Fails the process when the request operation fails on at least one instances)"
    echo "                              FAILS_PROCESS-ON_ALL_SYSTEM_FAILURE (Fails the process when the request operation fails on all instances)"
    echo "                              Default value is FAILS_PROCESS_ON_SINGLE_SYSTEM_FAILURE"
    exit 1
    }

if [-z "$JAVA_HOME" ]; then
        echo "JAVA_HOME enviornment variable must be defined"
        exit 1
fi
# get tool type (export, import ,ect.)
# tool type must coincide with an ant target in prpcUtils.xml

TOOL_TYPE=""
case "$1" 
in 
    "export")              TOOL_TYPE="export";;
    "expose")               TOOL_TYPE="expose";;
    "hotfix")               TOOL_TYPE="hotfix";;
    "import")               TOOL_TYPE="import";;
    "getStatus")            TOOL_TYPE="getStatus";;
    "rollback")             TOOL_TYPE="rollback";;
    "manageRestorePoints")  TOOL_TYPE="manageRestorePoints";;
    "UpdateAccessGroup")    TOOL_TYPE="UpdateAccessGroup";;
    "updateDASS")           TOOL_TYPE="updateDASS";;
    "help")                 usage;;
    "--help")               usage;;
    *)                      echo "Unknown tool type $1"
esac    
shift



ANT_PROPS=""
while [ $1  != ""] 
do 
    case "$1"
    in
          "--requestTimeOut") shift
                         ANT_PROPS="$ANT_PROPS -Dprpcserviceutils.request.timeout=\"$(escape "$1")\;;
          "--poolSize") shift
                         ANT_PROPS="$ANT_PROPS -Dprpcserviceutils.pool.size=\"$(escape "$1")\;;
          "--connPropFile") shift
                         ANT_PROPS="$ANT_PROPS -Dprpcserviceutils.connection.filepath=\"$(escape "$1")\;;
           "--propFile") shift
                         ANT_PROPS="$ANT_PROPS -Dprpcserviceutils.custom.property.filepath=\"$(escape "$1")\;;
            "--jobIdFile") shift
                         ANT_PROPS="$ANT_PROPS -Doperation.specific.file.path=\"$(escape "$1")\;;
            "--operationName") shift
                         ANT_PROPS="$ANT_PROPS -Dgetstatus.operationName=\"$(escape "$1")\;;
            "--artifactDIr") shift
                         ANT_PROPS="$ANT_PROPS -Dservice.responseartifacts.dir=\"$(escape "$1")\;;
            "--processFailStrategy") shift
                         ANT_PROPS="$ANT_PROPS -Dservice.processFailStrategy=\"$(escape "$1")\;;
            "--help")    usage;;
            *)           echo "Unknown setting $1"
                         usage;;
    esac 
    shift
done


TIMESTAMP=$(date +'%Y-%m-%d-%H-%M)
ANT_PROPS="$ANT_PROPS -Dprpc.service.utils.action=$TOOL_TYPE"
ANT_PROPS="$ANT_PROPS -Dlogfile.timestamp=$TIMESTAMP"
logfile=$CURRENT_SCRIPT/logs/CLI-prpcServiceUtils-log $(date + '%h=%d-%Y-).log
mkdir -p "$CURRENT_SCRIPT/logs"
#Run Ant , given the configuration we collected
run eval "\"$(dirname "$0)/../bin/ant\"" "$ANT_PROPS" -f "\"$CURRENT_SCRIPT/CI_prpcServiceUtilsWrapper.xml\"" "performOperation 2>&1 \|tee "$logfile" >/dev/null

if ["$pipestatus_1" -ne 0]; then
       echo "Ant Process returned a non 0 value "
       exit 1
    else 
       exit 0
fi

    

